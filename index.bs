<pre class='metadata'>
Title: WebRTC DSCP Control API
Shortname: webrtc-dscp-exp
Level: 1
Status: ED
Group: webrtc
Repository: w3c/webrtc-dscp-exp
URL: http://w3c.github.io/webrtc-dscp-exp/
Editor: Harald Alvestrand, Google https://google.com, hta@google.com
Abstract: This API defines a control surface for manipulating the network
Abstract: control bits (DSCP bits) of outgoing WebRTC packets, and the
Abstract: queueing priority of outgoing WebRTC packets under congestion.
Markup Shorthands: css no
</pre>
</pre>

<pre class='anchors'>
spec: WEBRTC; urlPrefix: https://w3c.github.io/webrtc-pc/
    type: dfn
        for: RTCRtpEncodingParameters; text: RTCRtpEncodingParameters; url: #dom-rtcrtpencodingparameters
    type: idl
        for: RTCRtpEncodingParameters; text: RTCRtpEncodingParameters, url: #dom-rtcrtpencodingparameters
    type: dictionary
        for: RTCRtpEncodingParameters; text: RTCRtpEncodingParameters, url: #dom-rtcrtpencodingparameters
    type: dfn
        for: RTCRtpSender; text: RTCRtpSender, url: #dom-rtcrtpsender
    
</pre>


# Introduction # {#intro}

The [[!WEBRTC]] spec defined a "{{priority}}" field as part of its
RTCRtpEncodingParameters structure, with the possible values "very-low",
"low", "medium" and "high".

This feature was removed in November 2019 due to lack of implementation
experience. It is now part of this document.

In addition, this specification adds fields to {{RTCRtpEncodingParameters}}
that allow control over the DSCP markings without affecting local
prioritization, and vice versa.

# Priority and QoS Model # {#model}

Many applications have multiple media flows of the same data type and
often some of the flows are more important than others. WebRTC uses the
priority and Quality of Service (QoS) framework described in
[[!RTCWEB-TRANSPORT]] and [[!TSVWG-RTCWEB-QOS]] to provide priority and
DSCP marking for packets that will help provide QoS in some networking
environments. The priority setting can be used to indicate the relative
priority of various flows. The priority API allows the JavaScript
applications to tell the browser whether a particular media flow is high,
medium, low or of very low importance to the application by setting the
<code>priority</code> property of
<code><a>RTCRtpEncodingParameters</a></code> objects to one of the
values defined below.

## RTCPriorityType Enum ## {#rtc-priority-type}
<pre class="idl">
enum RTCPriorityType {
  "very-low",
  "low",
  "medium",
  "high"
};
</pre>
          <table data-link-for="RTCPriorityType" data-dfn-for="RTCPriorityType"
          class="simple">
            <tbody>
              <tr>
                <th colspan="2">Enumeration description</th>
              </tr>
              <tr>
                <td><dfn data-idl><code>very-low</code></dfn></td>
                <td>See [[!RTCWEB-TRANSPORT]], Sections 4.1 and 4.2. Corresponds to "below
                normal" as defined in [[!RTCWEB-DATA]].</td>
              </tr>
              <tr>
                <td><dfn data-idl><code>low</code></dfn></td>
                <td>See [[!RTCWEB-TRANSPORT]], Sections 4.1 and 4.2. Corresponds to
                "normal" as defined in [[!RTCWEB-DATA]].</td>
              </tr>
              <tr>
                <td><dfn data-idl><code>medium</code></dfn></td>
                <td>See [[!RTCWEB-TRANSPORT]], Sections 4.1 and 4.2. Corresponds to "high"
                as defined in [[!RTCWEB-DATA]].</td>
              </tr>
              <tr>
                <td><dfn data-idl><code>high</code></dfn></td>
                <td>See [[!RTCWEB-TRANSPORT]], Sections 4.1 and 4.2. Corresponds to "extra
                high" as defined in [[!RTCWEB-DATA]].</td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>
      <p>Applications that use this API should be aware that often better
      overall user experience is obtained by lowering the priority of things
      that are not as important rather than raising the priority of the things
      that are.</p>
    </section>

## Extension to EncodingParameters ## {#encoding-parameters}

<pre class='idl'>
partial dictionary RTCRtpEncodingParameters {
  RTCPriorityType priority = "low";
  RTCPriorityType localPriority;
  RTCPriorityType networkPriority;
};
</pre>

<dl>

            <dt><dfn data-idl><code>priority</code></dfn> of type <span class=
            "idlMemberType"><a>RTCPriorityType</a></span>, defaulting to
            <code>"low"</code></dt>
            <dd>
              <p>
                Indicates the priority of an <code><a>RTCRtpSender</a></code>, which influences the
                bandwidth allocation among <code><a>RTCRtpSender</a></code> objects. It is specified
                in [[!RTCWEB-TRANSPORT]], Section 4. The user agent is free to sub-allocate bandwidth
                between the encodings of an <code><a>RTCRtpSender</a></code>.
              </p>
            </dd>
</dl>

<dfn for='RTCRtpEncodingParameters'>localPriority</dfn> has the same
effect as {{priority}}, except that it only affects the bandwidth allocation
decisions for the generated packets, as described in [[RTCWEB-TRANSPORT]]
section 4.1.

If {{localPriority}} is unset, the DSCP markings of the generated
packets are controlled by the {{priority}} member.


<dfn for='RTCRtpEncodingParameters'>networkPriority</dfn> has the same
effect as {{priority}}, except that it only affects the DSCP markings of
the generated packets, as described in [[RTCWEB-TRANSPORT]] section 4.2.

If {{networkPriority}} is unset, the DSCP markings of the generated
packets are controlled by the {{priority}} member.



# Extension for RTCDataChannel # {#datachannel}

<pre class='idl'>
partial interface RTCRtpDataChannelParameters {
  readonly attribute RTCPriorityType priority;
};

partial dictionary RTCRtpDataChannelInit {
  RTCPriorityType priority;
};

</pre>
## New DataChannel members
<dl>


            <dt data-tests="RTCPeerConnection-createDataChannel.html"><code>priority</code> of type <span class=
            "idlAttrType"><a>RTCPriorityType</a></span>, readonly</dt>
            <dd>
              <p>The <code>priority</code> attribute returns the priority for
              this <code><a>RTCDataChannel</a></code>. The priority is assigned
              by the user agent at channel creation time. On getting, the
              attribute MUST return the value of the
              <a>[[\DataChannelPriority]]</a> slot.</p>
            </dd>
</dl>
## New DataChannelInit members
<dl>
            <dt data-tests="RTCPeerConnection-createDataChannel.html"><code>priority</code> of type <span class=
            "idlMemberType"><a>RTCPriorityType</a></span>, defaulting to
            <code>low</code></dt>
            <dd>
              <p>Priority of this channel.</p>
            </dd>
</dl>

## RTCDataChannel processing steps

The following steps are added to the initialization steps for DataChannel:

Let DataChannel have an internal slot <a>[[\DataChannelPriority]]</a>.

In the processing steps for initializing a DataChannel, insert the following
step into processing the <var>option</var> argument:
<ul>
                <li>
                  <p>Initialize <var>channel</var>.<a>[[\DataChannelPriority]]</a> to <var>option</var>'s
                  <code>priority</code> member.</p>
                </li>
</ul>

<p>For an incoming DataChannel, initialize <var>channel</var>.<a>[[\DataChannelPriority]]</a> based on the integer priority value in
          <var>configuration</var>, according to the following mapping:
          </p>
          <table class="simple">
            <tr>
              <th><var>configuration</var> priority value</th>
              <th><code><a>RTCPriorityType</a></code> value</th>
            </tr>
            <tr>
              <td>0 to 128</td>
              <td><code><a data-link-for="RTCPriorityType">very-low</a></code></td>
            </tr>
            <tr>
              <td>129 to 256</td>
              <td><code><a data-link-for="RTCPriorityType">low</a></code></td>
            </tr>
            <tr>
              <td>257 to 512</td>
              <td><code><a data-link-for="RTCPriorityType">medium</a></code></td>
            </tr>
            <tr>
              <td>513 and greater</td>
              <td><code><a data-link-for="RTCPriorityType">high</a></code></td>
            </tr>
          </table>
        </li>


## Processing steps ## {#processing-steps}




